/*
 * MIND API
 *
 * This is the Master Inventory Network Database (MIND) API. MIND provides automated allocation of technical attributes needed to create IP and Ethernet VPNs on the global Sigma network. MIND supports the 'Nova' services specfication which defines the collection of connectivity services supported by ENT. Go to https://thehub.thomsonreuters.com/docs/DOC-2193014 to learn more.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: jonathan.beasley@thomsonreuters.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.WebUtilities;
using Microsoft.Extensions.Logging;
using Microsoft.Extensions.Primitives;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using Mind.Api.Attributes;
using Mind.Api.Models;
using SCM.Services;
using AutoMapper;
using Swashbuckle.AspNetCore.Annotations;

namespace Mind.Api.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiVersion("1.0")]
    public class TenantRoutingInstanceApiController : BaseApiController
    { 
        public TenantRoutingInstanceApiController(IRoutingInstanceService routingInstanceService, IMapper mapper) : base(routingInstanceService, mapper)
        {

        }
      
        /// <summary>
        /// Find all routing instances for a given tenant
        /// </summary>
        /// <remarks>Returns all routing instances for a given tenant</remarks>
        /// <param name="tenantId">ID of the tenant</param>
        /// <response code="200">successful operation</response>
        /// <response code="404">The specified resource was not found</response>
        [HttpGet]
        [Route("/v{version:apiVersion}/tenant/{tenantId}/routing-instance")]
        [ValidateModelState]
        [SwaggerOperation("GetAllRoutingInstancesByTenant")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<RoutingInstance>), description: "successful operation")]
        [SwaggerResponse(statusCode: 404, type: typeof(ApiResponse), description: "The specified resource was not found")]
        public virtual IActionResult GetAllRoutingInstancesByTenant([FromRoute][Required]int? tenantId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<RoutingInstance>));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ApiResponse));

            string exampleJson = null;
            exampleJson = "<RoutingInstance>\n  <routingInstanceId>123</routingInstanceId>\n  <name>aeiou</name>\n</RoutingInstance>";
            exampleJson = "[ {\n  \"routingInstanceId\" : 0,\n  \"name\" : \"name\"\n}, {\n  \"routingInstanceId\" : 0,\n  \"name\" : \"name\"\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<RoutingInstance>>(exampleJson)
            : default(List<RoutingInstance>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Find a single routing instance
        /// </summary>
        /// <remarks>Returns a single routing instance</remarks>
        /// <param name="routingInstanceId">ID of the routing instance</param>
        /// <response code="200">Successful operation</response>
        /// <response code="404">The specified resource was not found</response>
        [HttpGet]
        [Route("/v{version:apiVersion}/tenant/routing-instance/{routingInstanceId}")]
        [ValidateModelState]
        [SwaggerOperation("GetRoutingInstanceById")]
        [SwaggerResponse(statusCode: 200, type: typeof(RoutingInstance), description: "Successful operation")]
        [SwaggerResponse(statusCode: 404, type: typeof(ApiResponse), description: "The specified resource was not found")]
        public virtual IActionResult GetRoutingInstanceById([FromRoute][Required]int? routingInstanceId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(RoutingInstance));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ApiResponse));

            string exampleJson = null;
            exampleJson = "<RoutingInstance>\n  <routingInstanceId>123</routingInstanceId>\n  <name>aeiou</name>\n</RoutingInstance>";
            exampleJson = "{\n  \"routingInstanceId\" : 0,\n  \"name\" : \"name\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<RoutingInstance>(exampleJson)
            : default(RoutingInstance);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
