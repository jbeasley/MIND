/*
 * MIND API
 *
 * This is the Master Inventory Network Database (MIND) API. MIND provides automated allocation of technical attributes needed to create IP and Ethernet VPNs on the global Sigma network. MIND supports the 'Nova' services specfication which defines the collection of connectivity services supported by ENT. Go to https://thehub.thomsonreuters.com/docs/DOC-2193014 to learn more.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: jonathan.beasley@thomsonreuters.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.WebUtilities;
using Microsoft.Extensions.Logging;
using Microsoft.Extensions.Primitives;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using Mind.Api.Attributes;
using Mind.Api.Models;
using Swashbuckle.AspNetCore.Annotations;

namespace Mind.Api.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    public class TenantVifApiController : Controller
    { 
        /// <summary>
        /// Create a new vif
        /// </summary>
        
        /// <param name="attachmentId">ID of the attachment</param>
        /// <param name="body">vif request object that generates a new vif</param>
        /// <response code="200">Successful operation</response>
        /// <response code="400">Validation error</response>
        /// <response code="404">The specified resource was not found</response>
        [HttpPost]
        [Route("/v1/tenant/attachment/{attachmentId}/vif")]
        [ValidateModelState]
        [SwaggerOperation("AddTenantVif")]
        [SwaggerResponse(statusCode: 200, type: typeof(Vif), description: "Successful operation")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiResponse), description: "Validation error")]
        [SwaggerResponse(statusCode: 404, type: typeof(ApiResponse), description: "The specified resource was not found")]
        public virtual IActionResult AddTenantVif([FromRoute][Required]int? attachmentId, [FromBody]TenantVifRequest body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Vif));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiResponse));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ApiResponse));

            string exampleJson = null;
            exampleJson = "<Vif>\n  <vifId>123</vifId>\n  <name>aeiou</name>\n  <isLayer3>true</isLayer3>\n  <vlanTag>123</vlanTag>\n  <attachmentId>123</attachmentId>\n  <tenantId>123</tenantId>\n</Vif>";
            exampleJson = "{\n  \"vlans\" : [ {\n    \"vlanTag\" : 2,\n    \"vlanID\" : 5\n  }, {\n    \"vlanTag\" : 2,\n    \"vlanID\" : 5\n  } ],\n  \"vlanTag\" : 6,\n  \"contractBandwidthPool\" : {\n    \"name\" : \"name\",\n    \"contractBandwidthMbps\" : 5\n  },\n  \"name\" : \"name\",\n  \"tenantId\" : 5,\n  \"isLayer3\" : true,\n  \"attachmentId\" : 1,\n  \"routingInstance\" : {\n    \"routingInstanceId\" : 0,\n    \"name\" : \"name\"\n  },\n  \"vifId\" : 0\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Vif>(exampleJson)
            : default(Vif);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Deletes a vif
        /// </summary>
        
        /// <param name="vifId">ID of the vif</param>
        /// <response code="204">Successful operation</response>
        /// <response code="404">The specified resource was not found</response>
        [HttpDelete]
        [Route("/v1/tenant/attachment/vif/{vifId}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteTenantVif")]
        [SwaggerResponse(statusCode: 204, type: typeof(ApiResponse), description: "Successful operation")]
        [SwaggerResponse(statusCode: 404, type: typeof(ApiResponse), description: "The specified resource was not found")]
        public virtual IActionResult DeleteTenantVif([FromRoute][Required]int? vifId)
        { 
            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204, default(ApiResponse));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ApiResponse));

            string exampleJson = null;
            exampleJson = "<null>\n  <code>123</code>\n  <type>aeiou</type>\n  <message>aeiou</message>\n</null>";
            exampleJson = "{\n  \"code\" : 0,\n  \"type\" : \"type\",\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ApiResponse>(exampleJson)
            : default(ApiResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Find all vifs for a given attachment
        /// </summary>
        /// <remarks>Returns all vifs for a given attachment</remarks>
        /// <param name="attachmentId">ID of the attachment</param>
        /// <response code="200">Successful operation</response>
        /// <response code="404">The specified resource was not found</response>
        [HttpGet]
        [Route("/v1/tenant/attachment/{attachmentId}/vif")]
        [ValidateModelState]
        [SwaggerOperation("GetAllTenantVifsByAttachmentId")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Vif>), description: "Successful operation")]
        [SwaggerResponse(statusCode: 404, type: typeof(ApiResponse), description: "The specified resource was not found")]
        public virtual IActionResult GetAllTenantVifsByAttachmentId([FromRoute][Required]int? attachmentId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Vif>));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ApiResponse));

            string exampleJson = null;
            exampleJson = "<Vif>\n  <vifId>123</vifId>\n  <name>aeiou</name>\n  <isLayer3>true</isLayer3>\n  <vlanTag>123</vlanTag>\n  <attachmentId>123</attachmentId>\n  <tenantId>123</tenantId>\n</Vif>";
            exampleJson = "[ {\n  \"vlans\" : [ {\n    \"vlanTag\" : 2,\n    \"vlanID\" : 5\n  }, {\n    \"vlanTag\" : 2,\n    \"vlanID\" : 5\n  } ],\n  \"vlanTag\" : 6,\n  \"contractBandwidthPool\" : {\n    \"name\" : \"name\",\n    \"contractBandwidthMbps\" : 5\n  },\n  \"name\" : \"name\",\n  \"tenantId\" : 5,\n  \"isLayer3\" : true,\n  \"attachmentId\" : 1,\n  \"routingInstance\" : {\n    \"routingInstanceId\" : 0,\n    \"name\" : \"name\"\n  },\n  \"vifId\" : 0\n}, {\n  \"vlans\" : [ {\n    \"vlanTag\" : 2,\n    \"vlanID\" : 5\n  }, {\n    \"vlanTag\" : 2,\n    \"vlanID\" : 5\n  } ],\n  \"vlanTag\" : 6,\n  \"contractBandwidthPool\" : {\n    \"name\" : \"name\",\n    \"contractBandwidthMbps\" : 5\n  },\n  \"name\" : \"name\",\n  \"tenantId\" : 5,\n  \"isLayer3\" : true,\n  \"attachmentId\" : 1,\n  \"routingInstance\" : {\n    \"routingInstanceId\" : 0,\n    \"name\" : \"name\"\n  },\n  \"vifId\" : 0\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<Vif>>(exampleJson)
            : default(List<Vif>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Find vif by ID
        /// </summary>
        /// <remarks>Returns a single vif</remarks>
        /// <param name="vifId">ID of the vif</param>
        /// <response code="200">Successful operation</response>
        /// <response code="400">Validation error</response>
        /// <response code="404">The specified resource was not found</response>
        [HttpGet]
        [Route("/v1/tenant/attachment/vif/{vifId}")]
        [ValidateModelState]
        [SwaggerOperation("GetTenantVifById")]
        [SwaggerResponse(statusCode: 200, type: typeof(Vif), description: "Successful operation")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiResponse), description: "Validation error")]
        [SwaggerResponse(statusCode: 404, type: typeof(ApiResponse), description: "The specified resource was not found")]
        public virtual IActionResult GetTenantVifById([FromRoute][Required]int? vifId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Vif));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiResponse));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ApiResponse));

            string exampleJson = null;
            exampleJson = "<Vif>\n  <vifId>123</vifId>\n  <name>aeiou</name>\n  <isLayer3>true</isLayer3>\n  <vlanTag>123</vlanTag>\n  <attachmentId>123</attachmentId>\n  <tenantId>123</tenantId>\n</Vif>";
            exampleJson = "{\n  \"vlans\" : [ {\n    \"vlanTag\" : 2,\n    \"vlanID\" : 5\n  }, {\n    \"vlanTag\" : 2,\n    \"vlanID\" : 5\n  } ],\n  \"vlanTag\" : 6,\n  \"contractBandwidthPool\" : {\n    \"name\" : \"name\",\n    \"contractBandwidthMbps\" : 5\n  },\n  \"name\" : \"name\",\n  \"tenantId\" : 5,\n  \"isLayer3\" : true,\n  \"attachmentId\" : 1,\n  \"routingInstance\" : {\n    \"routingInstanceId\" : 0,\n    \"name\" : \"name\"\n  },\n  \"vifId\" : 0\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Vif>(exampleJson)
            : default(Vif);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update an existing vif
        /// </summary>
        
        /// <param name="vifId">ID of the vif</param>
        /// <param name="body">vif update object that updates an existing vif</param>
        /// <response code="200">Successful operation</response>
        /// <response code="400">Validation error</response>
        /// <response code="404">The specified resource was not found</response>
        [HttpPut]
        [Route("/v1/tenant/attachment/vif/{vifId}")]
        [ValidateModelState]
        [SwaggerOperation("UpdateTenantVif")]
        [SwaggerResponse(statusCode: 200, type: typeof(Vif), description: "Successful operation")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiResponse), description: "Validation error")]
        [SwaggerResponse(statusCode: 404, type: typeof(ApiResponse), description: "The specified resource was not found")]
        public virtual IActionResult UpdateTenantVif([FromRoute][Required]int? vifId, [FromBody]VifUpdate body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Vif));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiResponse));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ApiResponse));

            string exampleJson = null;
            exampleJson = "<Vif>\n  <vifId>123</vifId>\n  <name>aeiou</name>\n  <isLayer3>true</isLayer3>\n  <vlanTag>123</vlanTag>\n  <attachmentId>123</attachmentId>\n  <tenantId>123</tenantId>\n</Vif>";
            exampleJson = "{\n  \"vlans\" : [ {\n    \"vlanTag\" : 2,\n    \"vlanID\" : 5\n  }, {\n    \"vlanTag\" : 2,\n    \"vlanID\" : 5\n  } ],\n  \"vlanTag\" : 6,\n  \"contractBandwidthPool\" : {\n    \"name\" : \"name\",\n    \"contractBandwidthMbps\" : 5\n  },\n  \"name\" : \"name\",\n  \"tenantId\" : 5,\n  \"isLayer3\" : true,\n  \"attachmentId\" : 1,\n  \"routingInstance\" : {\n    \"routingInstanceId\" : 0,\n    \"name\" : \"name\"\n  },\n  \"vifId\" : 0\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Vif>(exampleJson)
            : default(Vif);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
