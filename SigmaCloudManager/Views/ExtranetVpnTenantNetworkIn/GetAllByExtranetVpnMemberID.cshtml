@model IEnumerable<SCM.Models.ViewModels.ExtranetVpnTenantNetworkInViewModel>


@{
    ViewData["Title"] = "Tenant IP Networks";
}

<ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="/Home">Home</a></li>
    <li class="breadcrumb-item"><a href="/Vpn/GetAll">VPNs</a></li>
    <li class="breadcrumb-item"><a href="/ExtranetVpnMember/GetAllByMemberVpnID/@ViewBag.ExtranetVpnMember.MemberVpn.VpnID">Extranet VPN Memberships - [@ViewBag.ExtranetVpnMember.MemberVpn.Name]</a></li>
    <li class="breadcrumb-item active">Extranet VPN Tenant Networks - [@ViewBag.ExtranetVpnMember.ExtranetVpn.Name]</li>
</ol>


@{await Html.RenderPartialAsync("_MessagingPartial");}
@{await Html.RenderPartialAsync("_ValidationModelErrorPartial");}

<h2>Tenant IP Networks FROM Member VPN '@ViewBag.ExtranetVpnMember.MemberVpn.Name' TO Extranet VPN '@ViewBag.ExtranetVpnMember.ExtranetVpn.Name'</h2>

<p>
    <a asp-action="Create" asp-route-id="@ViewBag.ExtranetVpnMember.ExtranetVpnMemberID">Add New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.VpnTenantIpNetworkIn.TenantIpNetwork)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.VpnTenantIpNetworkIn.TenantIpNetwork.CidrName)
                </td>
                <td>
                    @Html.ActionLink("Details", "Details", new { id = item.ExtranetVpnTenantNetworkInID }) |
                    @Html.ActionLink("Remove", "Delete", new { id = item.ExtranetVpnTenantNetworkInID })
                </td>
            </tr>
        }
    </tbody>
</table>
<a asp-controller="ExtranetVpnMember" asp-action="GetAllByMemberVpnID" asp-route-id="@ViewBag.ExtranetVpnMember.MemberVpnID">Back to Extranet VPN Memberships</a>