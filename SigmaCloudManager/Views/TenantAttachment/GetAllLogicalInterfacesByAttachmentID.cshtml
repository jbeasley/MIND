@model IEnumerable<SCM.Models.ViewModels.LogicalInterfaceViewModel>
@inject IOptions<ApplicationConfiguration> ApplicationConfiguration
@using Microsoft.Extensions.Options;
@using SCM;

@{
    ViewData["Title"] = "Logical Interfaces";
}

<ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="/Home">Home</a></li>
    <li class="breadcrumb-item"><a href="/Tenant/GetAll">Tenants</a></li>
    <li class="breadcrumb-item"><a href="/TenantAttachment/GetAllByTenantID?tenantID=@ViewBag.Attachment.TenantID">Tenant Attachments - [@ViewBag.Attachment.Tenant.Name]</a></li>
    <li class="breadcrumb-item active">Logical Interfaces - [@ViewBag.Attachment.Name]</li>
</ol>

@if (ApplicationConfiguration.Value.EnableNetworkSync)
{

    // Show Network messages if Network Sync functionality is enabled
    await Html.RenderPartialAsync("_NetworkMessagingPartial");
}

@{await Html.RenderPartialAsync("_MessagingPartial");}
@{await Html.RenderPartialAsync("_ValidationModelErrorPartial");}

<h2>Logical Interfaces for Routing Instance '@ViewBag.Attachment.RoutingInstance.Name'</h2>

<p>
    <a asp-action="CreateLogicalInterface" asp-route-id="@ViewBag.Attachment.AttachmentID">Create New</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IpAddress)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SubnetMask)
            </th>
            <th></th>
        </tr>
    </thead>

    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IpAddress)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SubnetMask)
            </td>
            <td>
                @Html.ActionLink("Edit", "EditLogicalInterface", new { logicalInterfaceID = item.LogicalInterfaceID, attachmentID = ViewBag.Attachment.AttachmentID }) |
                @Html.ActionLink("Details", "LogicalInterfaceDetails", new { logicalInterfaceID = item.LogicalInterfaceID, attachmentID = ViewBag.Attachment.AttachmentID }) |
                @Html.ActionLink("Delete", "DeleteLogicalInterface", new { logicalInterfaceID = item.LogicalInterfaceID, attachmentID = ViewBag.Attachment.AttachmentID })
            </td>
        </tr>
        }
    </tbody>
</table>
<div>
    <a asp-action="GetAllByTenantID" asp-route-tenantID="@ViewBag.Attachment.TenantID">Back to Tenant Attachments</a>
</div>