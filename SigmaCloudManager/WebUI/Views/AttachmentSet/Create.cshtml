@using Mind.WebUI.Models
@model Mind.WebUI.Models.AttachmentSetRequestViewModel

@{
    ViewData["Title"] = "Create Attachment Set";
}

<div id="crumbs">
    <ul>
        <li><a href="/Home"><i class="fa fa-home" aria-hidden="true"></i></a></li>
        <li><a href="/Tenant/GetAll"><i class="fa" aria-hidden="true"></i>Tenants</a></li>
        <li><a href="/AttachmentSet/GetAllByTenantId?tenantId=@ViewBag.Tenant.TenantId"><i class="fa" aria-hidden="true"></i>Attachment Sets - [@ViewBag.Tenant.Name]</a></li>
        <li class="active"><a href="#"><i class="fa" aria-hidden="true"></i>Create</a></li>
    </ul>
</div>

<h2>Create an Attachment Set for Tenant '@ViewBag.Tenant.Name'</h2>

<form id="form" asp-action="Create">
    <hr />
    @{await Html.RenderPartialAsync("_ValidationModelErrorPartial");}
    <input type="hidden" asp-for="TenantId" value="@ViewBag.Tenant.TenantId" />
    <div id="createAttachmentSetWizard">

        <h3>Attachment Redundancy</h3>
        <section id="attachment-redundancy">
            <!-- View component for displaying the attachmen redundancy options for the attachment set -->
            @await Component.InvokeAsync("AttachmentRedundancy", new AttachmentRedundancyComponentViewModel
        {
            AttachmentRedundancy = Model?.AttachmentRedundancy
        })
        </section>

        <h3>Protocol Layer Option</h3>
        <section id="protocol-layer">
            <div class="alert alert-info" role="alert">
                Create a layer 2 attachment set for inter-connecting tenant domains via an Ethernet VPN.
                Create a layer 3 attachment set for inter-connecting tenant domains with an IP VPN.
            </div>
            <div class="form-group row">
                <label class="col-form-label col-sm-2" asp-for="IsLayer3"></label>
                <div class="col-sm-10">
                    <div class="custom-control custom-checkbox">
                        <input class="form-check-input custom-control-input" type="checkbox" asp-for="IsLayer3" data-toggle="tooltip"
                               data-placement="right" title="Request a layer 3 attachment set">
                        <label class="form-check-label custom-control-label" for="IsLayer3"></label>
                    </div>
                </div>
            </div>
        </section>

        <h3>Geographic Region</h3>
        <section id="geographic-region">
            <div class="alert alert-info" role="alert">
                Select a region for the attachment set. When you add routing instances to the attachment set they must
                all belong to the designated region.
            </div>
            <div class="form-group row">
                <label asp-for="Region" class="col-sm-2 col-form-label"></label>
                <div class="col-sm-10">
                    <select asp-for="Region" class="form-control" asp-items="ViewBag.Region">
                        <option value="">-- Select Region --</option>
                    </select>
                    <span asp-validation-for="Region" class="text-danger"></span>
                </div>
            </div>
            <div class="alert alert-info" role="alert">
                For attachment sets with silver or gold level attachment redundancy you must select a sub-region option.
            </div>
            <div class="form-group row">
                <label asp-for="SubRegion" class="col-sm-2 col-form-label"></label>
                <div class="col-sm-10">
                    <select asp-for="SubRegion" class="form-control" asp-items="ViewBag.SubRegion">
                        <option value="">-- Optionally Select Sub-Region --</option>
                    </select>
                    <span asp-validation-for="SubRegion" class="text-danger"></span>
                </div>
            </div>
        </section>

        <h3>Routing Instances</h3>
        <section id="routing-instances">

            <!-- View component for displaying the routing instances which are bound to the attachment set -->
            @await Component.InvokeAsync("AttachmentSetRoutingInstances", new
        {
            attachmentSetRoutingInstanceRequests = Model?.AttachmentSetRoutingInstances
        })
        </section>

        <h3>BGP IP Network Inbound Policy</h3>
        <section id="bgp-ip-network-inbound-policy">

            <!-- View component for displaying the BGP IP Network Inbound Policy -->
            @await Component.InvokeAsync("BgpIpNetworkInboundPolicy", new
        {
            bgpIpNetworkInboundPolicy = Model?.BgpIpNetworkInboundPolicy
        })
        </section>

        <h3>BGP IP Network Outbound Policy</h3>
        <section id="bgp-ip-network-inbound-policy">

            <!-- View component for displaying the BGP IP Network Outbound Policy -->
            @await Component.InvokeAsync("BgpIpNetworkOutboundPolicy", new
        {
            bgpIpNetworkOutboundPolicy = Model?.BgpIpNetworkOutboundPolicy
        })
        </section>

    </div>
</form>

<div>
    <a mind-nav-link-back-btn="true" asp-action="GetAllByTenantID" asp-route-tenantID="@ViewBag.Tenant.TenantId">Back to Attachment Sets</a>
</div>

<!-- Loading Spinner partial view -->
@{await Html.RenderPartialAsync("_LoadingSpinnerPartial");}

<!-- Duplicate item dialog partial view -->
@{await Html.RenderPartialAsync("_DuplicateItemDialogPartial");}

@section Scripts {

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    @{await Html.RenderPartialAsync("_AttachmentSetCreateScriptsPartial");}
}