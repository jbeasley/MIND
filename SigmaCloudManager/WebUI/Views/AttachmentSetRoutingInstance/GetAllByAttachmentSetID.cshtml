@model IEnumerable<SCM.Models.ViewModels.AttachmentSetRoutingInstanceViewModel>
@inject IOptions<ApplicationConfiguration> ApplicationConfiguration
@using Microsoft.Extensions.Options;
@using SCM;

@{
    ViewData["Title"] = "Attachment Set VRFs";
}

<ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="/Home">Home</a></li>
    <li class="breadcrumb-item"><a href="/Tenant/GetAll">Tenants</a></li>
    <li class="breadcrumb-item"><a href="/AttachmentSet/GetAllByTenantID/@ViewBag.AttachmentSet.TenantID">Attachment Sets - [@ViewBag.AttachmentSet.Tenant.Name]</a></li>
    <li class="breadcrumb-item active">Attachment Set VRFs - [@ViewBag.AttachmentSet.Name]</li>
</ol>

@if (ApplicationConfiguration.Value.EnableNetworkSync)
{

    // Show Network messages if Network Sync functionality is enabled
    await Html.RenderPartialAsync("_NetworkMessagingPartial");
}

@{await Html.RenderPartialAsync("_MessagingPartial");}
@{await Html.RenderPartialAsync("_ValidationModelErrorPartial");}

<h2>VRFs for Attachment Set '@ViewBag.AttachmentSet.Name'</h2>

<p>
    <a asp-action="CreateStep1" asp-route-id="@ViewBag.AttachmentSet.AttachmentSetID" asp-route-tenantID="@Context.Request.Query["tenantID"]">Add New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.RoutingInstance)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RoutingInstance.Device.Location.SubRegion.Region)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RoutingInstance.Device.Location.SubRegion)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RoutingInstance.Device.Location)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RoutingInstance.Device.Plane)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.RoutingInstance.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RoutingInstance.Device.Location.SubRegion.Region.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RoutingInstance.Device.Location.SubRegion.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RoutingInstance.Device.Location.SiteName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RoutingInstance.Device.Plane.Name)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.AttachmentSetRoutingInstanceID, tenantID = Context.Request.Query["tenantID"] }) |
                    @Html.ActionLink("Details", "Details", new { id = item.AttachmentSetRoutingInstanceID, tenantID = Context.Request.Query["tenantID"] }) |
                    @Html.ActionLink("Remove", "Delete", new { id = item.AttachmentSetRoutingInstanceID, tenantID = Context.Request.Query["tenantID"] })
                </td>
            </tr>
        }
    </tbody>
</table>
<a asp-controller="AttachmentSet" asp-action="GetAllByTenantID" asp-route-id="@ViewBag.AttachmentSet.TenantID">Back to Attachment Sets</a>
@section Scripts {

    <script type="text/javascript">

        (function ($) {

            var $errorMessage = $('#errorMessage'),
                $errorMessageContainer = $('#errorMessageContainer'),
                $successMessage = $('#successMessage'),
                $successMessageContainer = $('#successMessageContainer');

            if ($errorMessage.html().length === 0) {

                $errorMessageContainer.hide();
            }

            if ($successMessage.html().length === 0) {

                $successMessageContainer.hide();
            }

        }(jQuery));

    </script>
}


