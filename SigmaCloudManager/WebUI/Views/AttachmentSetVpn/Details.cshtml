@model SCM.Models.ViewModels.VpnViewModel
@using SCM.Models.ViewModels;
@inject IOptions<ApplicationConfiguration> ApplicationConfiguration
@using Microsoft.Extensions.Options;
@using SCM;

@{
    ViewData["Title"] = "Details";
}

<ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="/Home">Home</a></li>
    <li class="breadcrumb-item"><a href="/Tenant/GetAll">Tenants</a></li>
    <li class="breadcrumb-item"><a href="/AttachmentSet/GetAllByTenantID/@Model.AttachmentSet.TenantID">Attachment Sets - [@Model.Tenant.Name]</a></li>
    <li class="breadcrumb-item"><a href="/AttachmentSetVpn/GetAllByAttachmentSetID/@Model.AttachmentSet.AttachmentSetID">VPNs - [@Model.AttachmentSet.Name]</a></li>
    <li class="breadcrumb-item active">Details - [@Model.Name]</li>
</ol>

<h2>Details for VPN '@Model.Name'</h2>

@{await Html.RenderPartialAsync("_MessagingPartial");}

<div>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Plane)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Plane.Name)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Region)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Region.Name)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.VpnTenancyType)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.VpnTenancyType.TenancyType)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.VpnTopologyType)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.VpnTopologyType.TopologyType)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Tenant)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Tenant.Name)
        </dd>
        @if (Model.VpnTopologyType.VpnProtocolType.ProtocolType == ProtocolType.IP)
        {
            <dt>
                @Html.DisplayNameFor(model => model.IsExtranet)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.IsExtranet)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.IsMulticastVpn)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.IsMulticastVpn)
            </dd>
            @if (Model.IsMulticastVpn)
            {
                <dt>
                    @Html.DisplayNameFor(model => model.MulticastVpnServiceType)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.MulticastVpnServiceType.Name)
                </dd>
                if (Model.VpnTopologyType.TopologyType == TopologyType.HubandSpoke)
                {
                    <dt>
                        @Html.DisplayNameFor(model => model.MulticastVpnDirectionType)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.MulticastVpnDirectionType.Name)
                    </dd>
                }
            }
        }
        <dt>
            @Html.DisplayNameFor(model => model.IsNovaVpn)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.IsNovaVpn)
        </dd>
        @if (ApplicationConfiguration.Value.EnableNetworkSync)
        {
            <dt>
                @Html.DisplayNameFor(model => model.RequiresSync)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.RequiresSync)
            </dd>
        }
    </dl>
</div>
<form asp-action="Sync">
    <input type="hidden" asp-for="VpnID" name="VpnID" />
    <input type="hidden" asp-for="AttachmentSetID" name="AttachmentSetID" />
    <a asp-action="GetAllByAttachmentSetID" asp-route-id="@Model.AttachmentSet.AttachmentSetID">Back to List</a>
</form>