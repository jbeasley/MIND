@model IEnumerable<SCM.Models.ViewModels.VpnViewModel>
@inject IOptions<ApplicationConfiguration> ApplicationConfiguration
@using Microsoft.Extensions.Options;
@using SCM;

@{
    ViewData["Title"] = "VPNs";
}


<ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="/Home">Home</a></li>
    <li class="breadcrumb-item"><a href="/Tenant/GetAll">Tenants</a></li>
    <li class="breadcrumb-item"><a href="/AttachmentSet/GetAllByTenantID/@ViewBag.AttachmentSet.TenantID">Attachment Sets - [@ViewBag.AttachmentSet.Tenant.Name]</a></li>
    <li class="breadcrumb-item active">VPNs - [@ViewBag.AttachmentSet.Name]</li>
</ol>

@if (ApplicationConfiguration.Value.EnableNetworkSync)
{

    // Show Network messages if Network Sync functionality is enabled
    await Html.RenderPartialAsync("_NetworkMessagingPartial");
}

@{await Html.RenderPartialAsync("_MessagingPartial");}
@{await Html.RenderPartialAsync("_ValidationModelErrorPartial");}

@if (ViewData["SuccessMessage"] != null)
{
    @using (Html.BeginForm("ClearCreatedAlerts", "AttachmentSetVpn", FormMethod.Post))
    {
        <input type="hidden" name="id" value="@ViewBag.AttachmentSet.AttachmentSetID" />
        <p>
            <button type="submit" class="btn btn-info btn-default">
                <span class="glyphicon glyphicon-minus-sign"></span>&nbsp;Clear Created Alerts
            </button>
        </p>
    }
}
@if (ApplicationConfiguration.Value.EnableNetworkSync)
{
    @if (ViewData["NetworkWarningMessage"] != null)
    {
        @using (Html.BeginForm("ClearRequiresSyncAlerts", "AttachmentSetVpn", FormMethod.Post))
        {
            <input type="hidden" name="id" value="@ViewBag.AttachmentSet.AttachmentSetID" />
            <p>
                <button type="submit" class="btn btn-info btn-default">
                    <span class="glyphicon glyphicon-minus-sign"></span>&nbsp;Clear Requires Sync Alerts
                </button>
            </p>
        }
    }
}

<h2>VPNs for Attachment Set '@ViewBag.AttachmentSet.Name'</h2>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Plane)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Region)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.VpnTenancyType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.VpnTopologyType.VpnProtocolType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.VpnTopologyType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Tenant)
            </th>
            @if (ApplicationConfiguration.Value.EnableNetworkSync)
            {
                <th>
                    @Html.DisplayNameFor(model => model.RequiresSync)
                </th>
            }
            <th></th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr id="@item.VpnID">
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Plane.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Region.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.VpnTenancyType.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.VpnTopologyType.VpnProtocolType.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.VpnTopologyType.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Tenant.Name)
                </td>
                @if (ApplicationConfiguration.Value.EnableNetworkSync)
                {
                    <td id="requiresSync_@item.VpnID">
                        @Html.DisplayFor(modelItem => item.RequiresSync)
                    </td>
                    <td>
                        <button type="button" id="Sync_@item.VpnID" data-item='{"id" : "@item.VpnID"}' class="btn btn-info btn-danger btn-sync btn-margin-2">
                            <span class="glyphicon glyphicon-refresh"></span>&nbsp;Sync
                        </button>
                        <button type="button" id="CheckSync_@item.VpnID" data-item='{"id" : "@item.VpnID"}' class="btn btn-info btn-warning btn-checksync btn-margin-2">
                            <span class="glyphicon glyphicon-check"></span>&nbsp;Check Sync
                        </button>
                    </td>
                    <td class="row-spinner spinner-element" id="syncStatus_@item.VpnID"></td>
                }
                else
                {
                    <td></td>
                    <td></td>
                }
                <td>
                    @Html.ActionLink("Details", "Details", new { id = item.VpnID, AttachmentSetID = ViewBag.AttachmentSet.AttachmentSetID })
                </td>
            </tr>
        }
    </tbody>
</table>
@if (ApplicationConfiguration.Value.EnableNetworkSync)
{
    <input type="hidden" name="AttachmentSetID" id="AttachmentSetID" value="@ViewBag.AttachmentSet.AttachmentSetID" />
    <button type="button" id="CheckSync" class="btn btn-info btn-warning">
        <span class="glyphicon glyphicon-check"></span>&nbsp;Check Sync All
    </button> <span>|</span>
    <button type="button" id="Sync" class="btn btn-info btn-danger">
        <span class="glyphicon glyphicon-refresh"></span>&nbsp;Sync All
    </button> <span>|</span>
}
<a asp-action="GetAllByTenantID" asp-controller="AttachmentSet" asp-route-id="@ViewBag.AttachmentSet.TenantID">Back to Attachment Sets</a>

@if (ApplicationConfiguration.Value.EnableNetworkSync)
{

    @section Scripts {

        <script type="text/javascript">

            (function ($) {

                var $attachmentSetID = $('#AttachmentSetID'),
                    attachmentSetVal = $attachmentSetID[0].value;

                SCM.Utilities.connectToNetworkSyncHub({
                    checkSyncUrl: '/api/v1/vpns/{id}/checksync',
                    syncUrl: '/api/v1/vpns/{id}/sync',
                    checkSyncAllUrl: '/api/v1/attachmentsets/' + attachmentSetVal + '/vpns/checksync',
                    syncAllUrl: '/api/v1/attachmentsets/' + attachmentSetVal + '/vpns/sync',
                    groupName: 'AttachmentSet_' + attachmentSetVal,
                    itemKey: 'VpnID'
                });

            }(jQuery));

        </script>
    }
}