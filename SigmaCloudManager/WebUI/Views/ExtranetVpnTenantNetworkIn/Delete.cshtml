@model SCM.Models.ViewModels.ExtranetVpnTenantNetworkInViewModel

@{
    ViewData["Title"] = "Delete";
}

<ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="/Home">Home</a></li>
    <li class="breadcrumb-item"><a href="/Vpn/GetAll">VPNs</a></li>
    <li class="breadcrumb-item"><a href="/ExtranetVpnMember/GetAllByMemberVpnID/@Model.ExtranetVpnMember.MemberVpn.VpnID">Extranet VPN Memberships - [@Model.ExtranetVpnMember.MemberVpn.Name]</a></li>
    <li class="breadcrumb-item"><a href="/ExtranetVpnTenantNetworkIn/GetAllByExtranetVpnMemberID/@Model.ExtranetVpnMember.ExtranetVpnMemberID">Extranet VPN Tenant Networks - [@Model.ExtranetVpnMember.ExtranetVpn.Name]</a></li>
    <li class="breadcrumb-item active">Delete - [@Model.VpnTenantIpNetworkIn.TenantIpNetwork.CidrName]</li>
</ol>

<h2>Remove Network '@Model.VpnTenantIpNetworkIn.TenantIpNetwork.CidrName' from Extranet VPN '@Model.ExtranetVpnMember.ExtranetVpn.Name'</h2>
<h3>Are you sure you want to remove this Network?</h3>
<div>
    <hr />
    @{await Html.RenderPartialAsync("_ValidationModelErrorPartial");}
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.VpnTenantIpNetworkIn.TenantIpNetwork)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.VpnTenantIpNetworkIn.TenantIpNetwork.CidrName)
        </dd>
    </dl>

    <form asp-action="Delete">
        <input type="hidden" asp-for="ExtranetVpnTenantNetworkInID" />
        <input type="hidden" asp-for="VpnTenantIpNetworkInID" />
        <input type="hidden" asp-for="ExtranetVpnMemberID" />
        <input type="hidden" asp-for="RowVersion" />
        <div class="form-actions no-color">
            <button type="submit" id="Delete" class="btn btn-info btn-danger" asp-action="Delete">
                <span class="glyphicon glyphicon-remove"></span>&nbsp;Remove
            </button> |
            <a asp-action="GetAllByExtranetVpnMemberID" asp-route-id="@Model.ExtranetVpnMemberID">Back to List</a>
        </div>
    </form>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
