@model IEnumerable<SCM.Models.ViewModels.AttachmentViewModel>
@inject IOptions<ApplicationConfiguration> ApplicationConfiguration
@using Microsoft.Extensions.Options;
@using SCM;

@{
    ViewData["Title"] = "Infrastructure Attachments";
}

<ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="/Home">Home</a></li>
    <li class="breadcrumb-item"><a href="/Infrastructure/Index">Infrastructure</a></li>
    <li class="breadcrumb-item active">Infrastructure Attachments</li>
</ol>

@if (ApplicationConfiguration.Value.EnableNetworkSync)
{

    // Show Network messages if Network Sync functionality is enabled
    await Html.RenderPartialAsync("_NetworkMessagingPartial");
}

@{await Html.RenderPartialAsync("_MessagingPartial");}
@{await Html.RenderPartialAsync("_ValidationModelErrorPartial");}

<h2>Infrastructure Attachments</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>

@using (Html.BeginForm("GetAll", "InfrastructureAttachment", FormMethod.Get))
{
    <p>
        Device Name: @Html.TextBox("SearchString")
        <button type="submit" class="btn btn-info btn-default ">
            <span class="glyphicon glyphicon-search"></span>&nbsp;Search
        </button>
    </p>
}

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Device)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Device.Location)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AttachmentRole)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsBundle)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsMultiPort)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsTagged)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsLayer3)
            </th>
            <th></th>
        </tr>
    </thead>

    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Device.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Device.Location.SiteName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AttachmentRole.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsBundle)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsMultiPort)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsTagged)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsLayer3)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.AttachmentID }) |
                    @Html.ActionLink("Details", "Details", new { id = item.AttachmentID }) |
                    @Html.ActionLink("Delete", "Delete", new { attachmentID = item.AttachmentID }) |
                    @Html.ActionLink("Interfaces", "GetAllInterfacesByAttachmentID", new { id = item.AttachmentID })
                    @if (item.IsTagged)
                    {
                        <span>|</span> @Html.ActionLink("VIFs", "GetAllByAttachmentID", "InfrastructureVif", new { id = item.AttachmentID })
                    }
                    @if (item.RoutingInstance != null)
                    {
                        <span>|</span> @Html.ActionLink("VRF", "RoutingInstanceDetails", new { id = item.AttachmentID })
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
<a asp-controller="Infrastructure" asp-action="Index">Back to Infrastructure Menu</a>
