@using Mind.WebUI.Models;
@model Mind.WebUI.Models.InfrastructureDeviceUpdateViewModel
@{
    ViewData["Title"] = "Update Device";
}
<div id="crumbs">
    <ul>
        <li><a href="/Home"><i class="fa fa-home" aria-hidden="true"></i></a></li>
        <li><a href="/InfrastructureServices"><i class="fa" aria-hidden="true"></i>Infrastructure Services</a></li>
        <li><a href="/InfrastructureDevice/GetAll"><i class="fa active" aria-hidden="true"></i>Infrastructure Devices</a></li>
        <li class="active"><a href="#"><i class="fa" aria-hidden="true"></i>Edit - [@Model.Name]</a></li>
    </ul>
</div>
<h2>Edit Device '@Model.Name'</h2>
<form id="form" asp-action="Edit">

     @{await Html.RenderPartialAsync("_ValidationModelErrorPartial");}

    <input type="hidden" asp-for="DeviceId" />
    <input type="hidden" asp-for="RowVersion" />

    <!-- The following input is used by the create.js and edit.js scripts to enable the stage or sync modal to be
    displayed when the user finishes with wizard -->
    <input type="hidden" id="showStageOrSyncModal" value="true" />

    <div id="deviceWizard">

        <h3>Name and Description</h3>
        <section id="name-and-description">
            <br />
            <div mind-alert="info" message="
                Enter a name for the device and a description.">
            </div>
            <div class="form-group row">
                <label asp-for="Name" class="col-sm-2 col-form-label"></label>
                <div class="col-sm-10">
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger" />
                </div>
            </div>
            <div class="form-group row">
                <label asp-for="Description" class="col-sm-2 col-form-label"></label>
                <div class="col-sm-10">
                    <input asp-for="Description" class="form-control" />
                    <span asp-validation-for="Description" class="text-danger" />
                </div>
            </div>
        </section>

        <h3>MTU and Activation Status</h3>
        <section id="mtu-status">
            <!-- View component for MTU and status options for the device -->
            @await Component.InvokeAsync("DeviceMtuAndStatus", new DeviceMtuAndStatusComponentViewModel
            {
                UseLayer2InterfaceMtu = Model.UseLayer2InterfaceMtu,
                DeviceStatus = Model.DeviceStatus
            })
        </section>

        <h3>Ports</h3>
        <section id="ports">
            <div id="portsComponent">
                <!-- View component for displaying a grid of ports which belong to the device -->
                @await Component.InvokeAsync("Ports", new
                {
                    ports = Model.Ports
                })
            </div>
        </section>

    </div>
</form>

<div>
    <a mind-nav-link-back-btn="true" asp-action="GetAll">Back to Devices</a>
</div>

<!--Container for the port form allowing the user to create/edit ports. The form HTML is loaded from the server when
the user clicks the 'create' or one of the grid row edit buttons -->
<div id="portFormContainer"></div>

<!-- Loading Spinner partial view -->
@{await Html.RenderPartialAsync("_LoadingSpinnerPartial");}

@section Scripts {

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    @{await Html.RenderPartialAsync("_InfrastructureDeviceEditScriptsPartial");}
}
