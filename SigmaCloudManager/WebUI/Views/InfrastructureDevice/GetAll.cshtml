@model IEnumerable<Mind.WebUI.Models.InfrastructureDeviceViewModel>
@{
    ViewData["Title"] = "Infrastructure Devices";
}
<div id="crumbs">
    <ul>
        <li><a href="/Home"><i class="fa fa-home" aria-hidden="true"></i></a></li>
        <li><a href="/InfrastructureServices"><i class="fa" aria-hidden="true"></i>Infrastructure Services</a></li>
        <li><a href="#"><i class="fa active" aria-hidden="true"></i>Infrastructure Devices</a></li>
    </ul>
</div>
@{await Html.RenderPartialAsync("_MessagingPartial");}
@{await Html.RenderPartialAsync("_ValidationModelErrorPartial");}
@if (ViewData["SuccessMessage"] != null)
{
    @using (Html.BeginForm("ClearCreatedAlerts", "InfrastructureDevice", FormMethod.Post))
    {
        <input type="hidden" />
        <p>
            <button type="submit" class="btn btn-info btn-default" is-clear-alerts-button></button>
        </p>
    }
}
<h2>Infrastructure Devices</h2>
<p>
    <a mind-create-btn-link="true" asp-action="Create"
       data-toggle="tooltip" data-placement="right"
       title="Create a device within the Provider Domain.
       For example, create a PE which is used to connect Tenant Domains to the Provider Domain.">Create New</a>
</p>
<table class="table table-striped table-hover mind-grid" id="mainGrid">
    <thead>
        <tr>
            <th>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DeviceModel)
            </th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody class="mind-grid-body-scroll-lg">
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <div class="custom-control custom-checkbox">
                        <input id="device_checkbox_@item.DeviceId" type="checkbox" class="form-check-input custom-control-input"
                               data-property-val="@item.DeviceId" data-query-parameter="deviceId=@item.DeviceId" />
                        <label class="form-check-label custom-control-label" for="device_checkbox_@item.DeviceId"></label>
                    </div>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DeviceModel)
                </td>
                <td colspan="2" align="right">
                    <a mind-grid-btn-link="true" asp-action="Edit" asp-route-deviceId="@item.DeviceId">Edit</a>
                    <a mind-grid-btn-link="true" asp-action="Details" asp-route-deviceId="@item.DeviceId">Details</a>
                    <a mind-grid-btn-link="true" asp-action="Delete" asp-route-deviceId="@item.DeviceId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<div class="card-deck" style="width: 27%">
    <a href="/#" data-href="/InfrastructureAttachment/GetAllByDeviceID?" class="card custom-card bg-light">
        <img class="card-img-top mx-auto d-block" src="~/images/infrastructure-attachment.png" alt="Card image cap">
        <div class="card-body">
            <h5 class="card-title text-center">Attachments</h5>
            <p class="card-text">Create and manage the lifecycle of Infrastructure Attachments</p>
        </div>
    </a>
</div>
<br />
<a mind-nav-link-back-btn="true" asp-controller="InfrastructureDevice" asp-action="GetAll">Back to Infrastructure</a>

<!-- List item selection modal messages partial view -->
@{await Html.RenderPartialAsync("_ListItemsModalMessagesPartial");}

<!-- Loading Spinner partial view -->
@{await Html.RenderPartialAsync("_LoadingSpinnerPartial");}

@section Scripts {

    @{await Html.RenderPartialAsync("_InfrastructureDeviceMainScriptsPartial");}

}
