@using Mind.WebUI.Models;
@model Mind.WebUI.Models.ProviderDomainAttachmentUpdateViewModel

@{
    ViewData["Title"] = "Edit Attachment";
}

<ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="/Home">Home</a></li>
    <li class="breadcrumb-item"><a href="/Tenant/GetAll">Tenants</a></li>
    <li class="breadcrumb-item"><a href="/ProviderDomainAttachment/GetAllByTenantID?tenantId=@ViewBag.Tenant.TenantId">Provider Domain Attachments - [@ViewBag.Tenant.Name]</a></li>
    <li class="breadcrumb-item active">Edit - [@Model.Name]</li>
</ol>

<h2>Edit Attachment '@Model.Name'</h2>

<form asp-action="Edit">
    <div class="form-horizontal">
        <hr />
        @{await Html.RenderPartialAsync("_ValidationModelErrorPartial");}
        <input type="hidden" asp-for="AttachmentId" />
        <input type="hidden" asp-for="RowVersion" />
        @if (Model.IsBundle)
        {
            <div class="form-group row">
                <label asp-for="BundleMinLinks" class="col-sm-2 col-form-label"></label>
                <div class="col-sm-10">
                    <input asp-for="BundleMinLinks" class="form-control" data-toggle="tooltip" data-placement="right"
                           title="Specify the minimum number of active links in the bundle" />
                    <span asp-validation-for="BundleMinLinks" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group row">
                <label asp-for="BundleMaxLinks" class="col-sm-2 col-form-label"></label>
                <div class="col-sm-10">
                    <input asp-for="BundleMaxLinks" class="form-control" data-toggle="tooltip" data-placement="right"
                           title="Specify the maximum number of active links in the bundle" />
                    <span asp-validation-for="BundleMaxLinks" class="text-danger"></span>
                </div>
            </div>
        }
        <div id="l3Component">

            @if (Model != null)
            {
                @await Component.InvokeAsync("ProviderDomainAttachmentL3", new
                {
                    attachmentId = Model.AttachmentId,
                    currentL3Model = new ProviderDomainAttachmentL3RequestViewModel
                    {
                        Ipv4Addresses = Model.Ipv4Addresses,
                        ContractBandwidthMbps = Model.ContractBandwidthMbps,
                        TrustReceivedCosAndDscp = Model.TrustReceivedCosAndDscp
                    }
                });
            }

        </div>
        @if (!string.IsNullOrEmpty(Model.ExistingRoutingInstanceName))
        {
            <div class="form-group row">
                <label asp-for="ExistingRoutingInstanceName" class="col-sm-2 col-form-label"></label>
                <div class="col-sm-10">
                    <select asp-for="ExistingRoutingInstanceName" class="form-control" asp-items="ViewBag.RoutingInstance"
                            data-toggle="tooltip" data-placement="right" title="Select a routing instance for the attachment">
                        <option value="">-- Select Routing Instance --</option>
                    </select>
                    <span asp-validation-for="ExistingRoutingInstanceName" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group row">
                <div class="col-sm-2">
                </div>
                <div class="col-sm-10">
                    <label class="checkbox-inline">
                        <input type="checkbox" asp-for="CreateNewRoutingInstance" data-toggle="tooltip"
                               title="Create a new routing instance for the attachment"> <label asp-for="CreateNewRoutingInstance"></label>
                    </label>
                </div>
            </div>
        }
        <div class="form-group row">
            <label class="col-form-label col-sm-2"></label>
            <div class="col-sm-10">
                <div class="form-check form-check-inline">
                    <input class="form-check-input" type="checkbox" asp-for="UseJumboMtu" data-toggle="tooltip" title="Enable jumbo MTU">
                    <label class="form-check-label" asp-for="UseJumboMtu"></label>
                </div>
            </div>
        </div>
        <div class="form-group row">
            <label asp-for="Description" class="col-sm-2 col-form-label"> </label>
            <div class="col-sm-10">
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group row">
            <label asp-for="Notes" class="col-sm-2 col-form-label"> </label>
            <div class="col-sm-10">
                <textarea asp-for="Notes" class="form-control" rows="5"></textarea>
                <span asp-validation-for="Notes" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group row">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" id="Edit" class="btn btn-success" asp-action="Edit" is-save-button>
                </button>
            </div>
        </div>
    </div>
</form>

<div>
    <a asp-action="GetAllByTenantID" asp-route-tenantID="@ViewBag.Tenant.TenantId">Back to Attachments List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

<script type="text/javascript">

        (function ($) {

            var $routingInstance = $('#ExistingRoutingInstanceName'),
                routingInstance = $routingInstance[0],
                $createNewRoutingInstance = $('#CreateNewRoutingInstance'),
                createNewRoutingInstance = $createNewRoutingInstance[0];

            // Initialise all tool-tips
            $('[data-toggle="tooltip"]').tooltip();

            if (createNewRoutingInstance.checked) {

                routingInstance.selectedIndex = 0;
                routingInstance.disabled = true;
            }

            $createNewRoutingInstance.on('click', function () {

                if (this.checked) {

                    routingInstance.selectedIndex = 0;
                    routingInstance.disabled = true;
                }
                else {

                    routingInstance.disabled = false;
                }
            });
            

        }(jQuery));

</script>

}