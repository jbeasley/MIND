@using Mind.WebUI.Models;
@model IEnumerable<BgpPeerRequestViewModel>


<div mind-alert="info" message="Create and edit BGP peers">
</div>
<!-- Button trigger modal showing form for create/upadte of a BGP peer -->
<button type="button" id="showBgpPeerFormBtn" class="btn btn-primary" is-create-button></button>
<br />
<br />
<div class="form-group row">
    <div class="col-sm-12">
        <table id="bgp-peer-grid" class="table table-condensed table-hover table-striped mind-grid">
            <thead>
                <tr>
                    <th style="width:20%" valign="top">@Html.DisplayNameFor(model => model.Ipv4PeerAddress)</th>
                    <th style="width:20%" valign="top">@Html.DisplayNameFor(model => model.Peer2ByteAutonomousSystem)</th>
                    <th style="width:20%" valign="top">@Html.DisplayNameFor(model => model.PeerPassword)</th>
                    <th style="width:10%" valign="top">@Html.DisplayNameFor(model => model.IsBfdEnabled)</th>
                    <th style="width:10%" valign="top">@Html.DisplayNameFor(model => model.IsMultiHop)</th>
                    <th style="width:10%" valign="top">@Html.DisplayNameFor(model => model.MaximumRoutes)</th>
                    <th style="width:10%" valign="top">Actions</th>
                </tr>
            </thead>
            <tbody class="mind-grid-body-scroll-lg">
                <!-- View component for displaying the grid of BGP peers
                This is put into a separate view component so that the grid data can be reloaded from the server from the client
                whenever a new row is added or a row deleted -->
                @await Component.InvokeAsync("BgpPeersGridData", new
                {
                    bgpPeerRequests = Model
                })
            </tbody>
        </table>
    </div>
</div>