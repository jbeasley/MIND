@using Mind.WebUI.Models;
@model PortRequestOrUpdateViewModel
<!-- Modal form for creating a device port -->
<div class="modal fade" id="portModal" tabindex="-1" role="dialog" aria-labelledby="portModalTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <form id="portForm">
                <div class="modal-header">
                    <h5 class="modal-title" id="portModalTitle">Port Details</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <!-- Store the ID of the row from the grid if we're editing an existing port  -->
                    <input type="text" id="RowId" hidden />
                    <!-- Store the ID of the port for editing an existing port  -->
                    <input type="text" asp-for="PortId" hidden />
                    <!-- Store the ID of a tenant to which the port is assigned  -->
                    <input type="text" asp-for="TenantId" id="AssignedTenantId" hidden />

                    @if (Model.PortStatus == Mind.WebUI.PortStatusTypeEnum.Assigned)
                    {
                        <!--Define hidden input elements for the inputs which are not shown to the user because the current
                        port is assigned. This ensures that when the port being edited is saved we capture all the data needed to
                        send to the server -->
                        <input type="text" asp-for="PortType" hidden />
                        <input type="text" asp-for="PortName" hidden />
                        <input type="text" asp-for="PortBandwidthGbps" hidden />
                        <input type="text" asp-for="PortRole" hidden />
                        <input type="text" asp-for="PortPool" hidden />
                        <input type="text" asp-for="PortStatus" hidden />

                        @if (!string.IsNullOrEmpty(Model.TenantName))
                        {
                            <div mind-alert="warning" message="This port is assigned to tenant '@Model.TenantName' and therefore the abiity to make certain changes such as changing
                        the type, name, and profile parameters are disabled."></div>
                        }
                        else if (!string.IsNullOrEmpty(Model.AttachmentName))
                        {
                            <div mind-alert="warning" message="This port is assigned to attachment '@Model.AttachmentName' and therefore the abiity to make certain changes such as changing
                                the type, name, and profile parameters are disabled."></div>
                        }
                    }

                    <ul class="nav nav-pills mb-3" id="pills-tab" role="tablist">

                        @if (Model.PortStatus != Mind.WebUI.PortStatusTypeEnum.Assigned)
                        {
                            <li class="nav-item">
                                <a class="nav-link active" id="pills-type-name-tab" data-toggle="pill" href="#pills-type-name" role="tab" aria-controls="pills-type-name" aria-selected="true">Type and Name</a>
                            </li>

                            <li class="nav-item">
                                <a class="nav-link" id="pills-bandwidth-tab" data-toggle="pill" href="#pills-bandwidth" role="tab" aria-controls="pills-bandwidth" aria-selected="false">Bandwidth</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="pills-status-tab" data-toggle="pill" href="#pills-status" role="tab" aria-controls="pills-status" aria-selected="false">Status</a>
                            </li>

                            <li class="nav-item">
                                <a class="nav-link" id="pills-profile-tab" data-toggle="pill" href="#pills-profile" role="tab" aria-controls="pills-profile" aria-selected="false">Profile</a>
                            </li>


                            <li class="nav-item">
                                <a class="nav-link" id="pills-connector-and-sfp-tab" data-toggle="pill" href="#pills-connector-and-sfp" role="tab" aria-controls="pills-connector-and-sfp" aria-selected="false">Connector and SFP</a>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item">
                                <a class="nav-link active" id="pills-connector-and-sfp-tab" data-toggle="pill" href="#pills-connector-and-sfp" role="tab" aria-controls="pills-connector-and-sfp" aria-selected="false">Connector and SFP</a>
                            </li>
                        }

                    </ul>
                    <div class="tab-content" id="pills-tabContent">

                        @if (Model.PortStatus != Mind.WebUI.PortStatusTypeEnum.Assigned)
                        {
                            <div class="tab-pane fade show active" id="pills-type-name" role="tabpanel" aria-labelledby="pills-type-name-tab">
                                <div mind-alert="info" message="Enter the type of the port. For example, GigabitEthernet or TenGigabitEthernet"></div>
                                <div class="form-group row">
                                    <label asp-for="PortType" class="col-sm-4 col-form-label"> </label>
                                    <div class="col-sm-8">
                                        <input asp-for="PortType" class="form-control" />
                                        <span asp-validation-for="PortType" class="text-danger"></span>
                                    </div>
                                </div>
                                <div mind-alert="info" message="Enter the name of the port. For example, 1/0"></div>
                                <div class="form-group row">
                                    <label asp-for="PortName" class="col-sm-4 col-form-label"> </label>
                                    <div class="col-sm-8">
                                        <input asp-for="PortName" class="form-control" />
                                        <span asp-validation-for="PortName" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane fade" id="pills-bandwidth" role="tabpanel" aria-labelledby="pills-bandwidth-tab">
                                <!-- View component for displaying the bandwidth dropdown list control -->
                                @await Component.InvokeAsync("PortBandwidth", new PortBandwidthComponentViewModel
                                {
                                    PortBandwidthGbps = Model?.PortBandwidthGbps
                                })
                            </div>
                            <div class="tab-pane fade" id="pills-status" role="tabpanel" aria-labelledby="pills-status-tab">
                                <!-- View component for displaying the port status dropdown list control -->
                                @await Component.InvokeAsync("PortStatus", new PortStatusComponentViewModel
                                {
                                    PortStatus = Model?.PortStatus
                                })
                            </div>

                            <div class="tab-pane fade" id="pills-profile" role="tabpanel" aria-labelledby="pills-profile-tab">
                                <!-- View component for displaying the port profile dropdown lists controls which include the
                                port pool and port role dropdown lists  -->
                                <div id="portProfileSelector">
                                    @await Component.InvokeAsync("PortProfile", new PortProfileComponentViewModel
                                    {
                                        PortRole = Model?.PortRole,
                                        PortPool = Model?.PortPool,
                                        IsTenantDomainRole = Model?.IsTenantDomainRole,
                                        IsProviderDomainRole = Model?.IsProviderDomainRole
                                    })
                                </div>
                            </div>

                            <div class="tab-pane fade" id="pills-connector-and-sfp" role="tabpanel" aria-labelledby="pills-connector-and-sfp-tab">
                                <!-- View component for displaying the port connector and SFP dropdown list controls -->
                                @await Component.InvokeAsync("PortConnectorAndSfp", new PortConnectorAndSfpComponentViewModel
                                {
                                    PortConnector = Model?.PortConnector,
                                    PortSfp = Model?.PortSfp
                                })
                            </div>
                        }
                        else
                        {
                            <div class="tab-pane fade show active" id="pills-connector-and-sfp" role="tabpanel" aria-labelledby="pills-connector-and-sfp-tab">
                                <!-- View component for displaying the port connector and SFP dropdown list controls -->
                                @await Component.InvokeAsync("PortConnectorAndSfp", new PortConnectorAndSfpComponentViewModel
                                {
                                    PortConnector = Model?.PortConnector,
                                    PortSfp = Model?.PortSfp
                                })
                            </div>
                        }

                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" id="savePort" class="btn btn-success" is-save-button></button>
                </div>
            </form>
        </div>
    </div>
</div>