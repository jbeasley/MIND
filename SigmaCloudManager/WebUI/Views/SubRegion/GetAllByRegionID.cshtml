@model IEnumerable<SCM.Models.ViewModels.SubRegionViewModel>
@inject IOptions<ApplicationConfiguration> ApplicationConfiguration
@using Microsoft.Extensions.Options;
@using SCM;

@{
    ViewData["Title"] = "SubRegions";
}

<ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="/Home">Home</a></li>
    <li class="breadcrumb-item"><a href="/Infrastructure/Index">Infrastructure</a></li>
    <li class="breadcrumb-item"><a href="/Region/GetAll">Regions</a></li>
    <li class="breadcrumb-item active">Sub-Regions - [@ViewBag.Region.Name]</li>
</ol>

@if (ApplicationConfiguration.Value.EnableNetworkSync)
{

    // Show Network messages if Network Sync functionality is enabled
    await Html.RenderPartialAsync("_NetworkMessagingPartial");
}

@{await Html.RenderPartialAsync("_MessagingPartial");}
@{await Html.RenderPartialAsync("_ValidationModelErrorPartial");}

<h2>Sub-Regions of Region '@ViewBag.Region.Name'</h2>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LocaleCommunityName)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LocaleCommunityName)
                </td>
                <td>
                    @Html.ActionLink("Locations", "GetAllBySubRegionID", "Location", new { id = item.SubRegionID })
                </td>
            </tr>
        }
    </tbody>
</table>
<div>
    <a asp-controller="Region" asp-action="GetAll">Back to Regions List</a>
</div>