@model Mind.WebUI.Models.VpnViewModel

@{
    ViewData["Title"] = "VPN Details";
}

<ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="/Home">Home</a></li>
    <li class="breadcrumb-item"><a href="/Tenant/GetAll">Tenants</a></li>
    <li class="breadcrumb-item"><a href="/Vpn/GetAllByTenantID?tenantId=@Model.TenantId">Attachment Sets - [@Model.TenantName]</a></li>
    <li class="breadcrumb-item active">Details - [@Model.Name]</li>
</ol>

<h2>Details for VPN '@Model.Name'</h2>

@{await Html.RenderPartialAsync("_MessagingPartial");}

<div>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.TenantOwnerName)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.TenantOwnerName)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.AddressFamily)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.AddressFamily)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.IsExtranet)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.IsExtranet)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.IsNovaVpn)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.IsNovaVpn)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Region)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Region)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.TenancyType)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.TenancyType)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.TopologyType)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.TopologyType)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Plane)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Plane)
        </dd>
    </dl>
    <br />
    <h3>@Html.DisplayNameFor(model => model.RouteTargets)</h3>
    <hr />
    @foreach (var item in Model.RouteTargets)
    {
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(x => item.Name)
        </dt>
        <dd>
            @Html.DisplayFor(x => item.Name)
        </dd>
        <dt>
            @Html.DisplayNameFor(x => item.RangeName)
        </dt>
        <dd>
            @Html.DisplayFor(x => item.RangeName)
        </dd>
        <dt>
            @Html.DisplayNameFor(x => item.AdministratorSubField)
        </dt>
        <dd>
            @Html.DisplayFor(x => item.AdministratorSubField)
        </dd>
        <dt>
            @Html.DisplayNameFor(x => item.AssignedNumberSubField)
        </dt>
        <dd>
            @Html.DisplayFor(x => item.AssignedNumberSubField)
        </dd>
    </dl>
    <hr />
    }
</div>
<form asp-action="">
    <div class="form-actions no-color">
        <a asp-action="GetAllByTenantID" asp-route-tenantID="@Model.TenantId">Back to VPNs List</a>
    </div>
</form>