@model SCM.Models.ViewModels.VpnAttachmentSetViewModel
@using SCM.Models.ViewModels;

@{
    ViewData["Title"] = "Remove";
}

<ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="/Home">Home</a></li>
    <li class="breadcrumb-item"><a href="/Vpn/GetAll">VPNs</a></li>
    <li class="breadcrumb-item"><a href="/VpnAttachmentSet/GetAllByVpnID/@ViewBag.Vpn.VpnID">VPN Attachment Sets - [@ViewBag.Vpn.Name]</a></li>
    <li class="breadcrumb-item active">Delete - [@Model.AttachmentSet.Name]</li>
</ol>

<h2>Remove Attachment Set '@Model.AttachmentSet.Name'</h2>

@{await Html.RenderPartialAsync("_MessagingPartial");}
@{await Html.RenderPartialAsync("_ValidationModelErrorPartial");}

<h3>Are you sure you want to remove this Attachment Set from VPN '@Model.Vpn.Name' ?</h3>
<div>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Vpn)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Vpn.Name)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.AttachmentSet)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.AttachmentSet.Name)
        </dd>
        @if (Model.Vpn.VpnTopologyType.TopologyType == TopologyType.HubandSpoke)
        {
            <dt>
                @Html.DisplayNameFor(model => model.IsHub)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.IsHub)
            </dd>
        }
    </dl>

    <form asp-action="Delete">
        <input type="hidden" asp-for="VpnAttachmentSetID" />
        <input type="hidden" asp-for="VpnID" />
        <input type="hidden" asp-for="RowVersion" />
        <div class="form-actions no-color">
            <button type="submit" id="Delete" class="btn btn-info btn-danger" asp-action="Delete">
                <span class="glyphicon glyphicon-remove"></span>&nbsp;Remove
            </button> |
            <a asp-action="GetAllByVpnID" asp-route-id="@Model.Vpn.VpnID">Back to Attachment Sets</a>
        </div>
    </form>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
