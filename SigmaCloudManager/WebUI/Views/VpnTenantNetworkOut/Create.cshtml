@model SCM.Models.ViewModels.VpnTenantIpNetworkOutViewModel

@{
    ViewData["Title"] = "Add Tenant Network";
}

<ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="/Home">Home</a></li>
    <li class="breadcrumb-item"><a href="/Tenant/GetAll">Tenants</a></li>
    <li class="breadcrumb-item"><a href="/AttachmentSet/GetAllByTenantID/@ViewBag.AttachmentSet.TenantID">Attachment Sets- [@ViewBag.AttachmentSet.Tenant.Name]</a></li>
    <li class="breadcrumb-item"><a href="/VpnTenantNetworkOut/GetAllByAttachmentSetID/@ViewBag.AttachmentSet.AttachmentSetID">Tenant Networks Outbound Policy - [@ViewBag.AttachmentSet.Name]</a></li>
    <li class="breadcrumb-item active">Add Tenant Network</li>
</ol>

<h2>Add Network to Outbound Policy</h2>

<form asp-action="Create">
    <div class="form-horizontal">
        <hr />
        @{await Html.RenderPartialAsync("_ValidationModelErrorPartial");}
        <input type="hidden" asp-for="AttachmentSetID" value="@ViewBag.AttachmentSet.AttachmentSetID" />
        <div class="form-group">
            <label asp-for="Tenant" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <select asp-for="TenantID" class="form-control" asp-items="ViewBag.TenantID">
                    <option value="">-- Select Tenant --</option>
                </select>
                <span asp-validation-for="TenantID" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="TenantIpNetwork" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <select asp-for="TenantIpNetworkID" class="form-control" asp-items="ViewBag.TenantIpNetworkID">
                    <option value="">-- Select Tenant Network --</option>
                </select>
                <span asp-validation-for="TenantIpNetworkID" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="RoutingInstance" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <select asp-for="RoutingInstanceID" class="form-control" asp-items="ViewBag.RoutingInstanceID">
                    <option value="">-- Select VRF --</option>
                </select>
                <span asp-validation-for="RoutingInstanceID" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="BgpPeer" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <select asp-for="BgpPeerID" class="form-control" asp-items="ViewBag.BgpPeerID">
                    <option value="">-- Select BGP Peer --</option>
                </select>
                <span asp-validation-for="BgpPeerID" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="AdvertisedIpRoutingPreference" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="AdvertisedIpRoutingPreference" class="form-control" />
                <span asp-validation-for="AdvertisedIpRoutingPreference" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" id="Add" class="btn btn-success" asp-action="Create">
                    <span class="glyphicon glyphicon-plus"></span>&nbsp;Add
                </button>
            </div>
        </div>
    </div>
</form>

<div>
    <a asp-action="GetAllByAttachmentSetID" asp-route-id="@ViewBag.AttachmentSet.AttachmentSetID" >Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script type="text/javascript">

        (function ($) {

            // Initialise all tool-tips

            $('[data-toggle="tooltip"]').tooltip();

            var $tenant = $('#TenantID'),
                tenant = $tenant[0],
                $tenantNetwork = $('#TenantNetworkID'),
                tenantNetwork = $tenantNetwork[0],
                $vrf = $('#RoutingInstanceID'),
                vrf = $vrf[0],
                $bgpPeer = $('#BgpPeerID'),
                bgpPeer = $bgpPeer[0],
                $advertisedIpRoutingPreference = $('#AdvertisedIpRoutingPreference'),
                advertisedIpRoutingPreference = $advertisedIpRoutingPreference[0];

            if (tenantNetwork.value === null || tenantNetwork.value === "") {

                tenantNetwork.disabled = true;
            }

            if (bgpPeer.value === null || bgpPeer.value === "") {

                bgpPeer.disabled = true;
            }

            $tenant.on('change', function (e) {

                tenantNetwork.selectedIndex = 0;
                tenantNetwork.disabled = true;
                PopulateTenantNetworksDropDownList(this.value);
            });
      
            $vrf.on('change', function (e) {

                bgpPeer.selectedIndex = 0;
                bgpPeer.disabled = true;
                PopulateBgpPeersDropDownList(this.value);
            });

            function PopulateTenantNetworksDropDownList(tenantID) {

                if (tenantID !== null && tenantID.length > 0) {

                    PopulateHtmlFromUrl($tenantNetwork, "/VpnTenantNetworkOut/TenantNetworks", { tenantID: tenantID });
                }
            }

            function PopulateBgpPeersDropDownList(vrfID) {

                if (vrfID !== null && vrfID.length > 0) {

                    PopulateHtmlFromUrl($bgpPeer, "/VpnTenantNetworkOut/BgpPeers", { vrfID: vrfID });
                }
            }

            function PopulateHtmlFromUrl($e, url, data) {

                $.get(url, data)
                    .done(function (data) {

                        // Enable the html element to be populated
                        $e[0].disabled = false;

                        $e.html(data);
                    });
            }

        }(jQuery));

    </script>
}
