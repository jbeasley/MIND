(n=>{function f(t){const f=r(t),e=JSON.stringify(f),i=n.Deferred();return Mind.Utilities.showSpinner("Getting data from the server...."),n.post({contentType:"application/json; charset=utf-8",url:"GetAttachmentSetRoutingInstancesGridData",data:e}).done(t=>{n("#routing-instance-grid").find("tbody").html(t),u(),i.resolve()}).always(()=>Mind.Utilities.hideSpinner()),i.promise()}function e(t){const r=s(t),f=JSON.stringify(r),i=n.Deferred();return Mind.Utilities.showSpinner("Getting data from the server...."),n.post({url:"GetBgpIpNetworkInboundPolicyGridData",contentType:"application/json; charset=utf-8",data:f}).done(t=>{n("#bgp-ip-network-inbound-policy-grid").find("tbody").html(t),u(),i.resolve()}).always(()=>Mind.Utilities.hideSpinner()),i.promise()}function o(t){const r=h(t),f=JSON.stringify(r),i=n.Deferred();return Mind.Utilities.showSpinner("Getting data from the server...."),n.post({url:"GetBgpIpNetworkOutboundPolicyGridData",contentType:"application/json; charset=utf-8",data:f}).done(t=>{n("#bgp-ip-network-outbound-policy-grid").find("tbody").html(t),u(),i.resolve()}).always(()=>Mind.Utilities.hideSpinner()),i.promise()}function r(t){typeof t=="undefined"&&(t=[]);var i=n("#routing-instance-grid"),r=i.find("tbody tr");return r.each(function(){const i=n(this);t.push({RoutingInstanceName:i.data("name"),LocalIpRoutingPreference:i.data("local-ip-routing-preference"),AdvertisedIpRoutingPreference:i.data("advertised-ip-routing-preference")})}),t}function s(t){typeof t=="undefined"&&(t=[]);var i=n("#bgp-ip-network-inbound-policy-grid").find("tbody tr");i.each(function(){const i=n(this);t.push({TenantId:i.data("tenant-id"),TenantIpNetworkCidrName:i.data("cidr-name"),AddToAllBgpPeersInAttachmentSet:i.data("add-to-all-bgp-peers-in-attachment-set"),Ipv4PeerAddress:i.data("ipv4-peer-address"),LocalIpRoutingPreference:i.data("local-ip-routing-preference")})});const u=r(),f=u.map(n=>n.RoutingInstanceName);return{RoutingInstanceNames:f,VpnTenantIpNetworkInRequests:t}}function h(t){typeof t=="undefined"&&(t=[]);const i=n("#bgp-ip-network-outbound-policy-grid").find("tbody tr");i.each(function(){const i=n(this);t.push({TenantId:i.data("tenant-id"),TenantName:i.data("tenant-name"),TenantIpNetworkCidrName:i.data("cidr-name"),AddToAllBgpPeersInAttachmentSet:i.data("add-to-all-bgp-peers-in-attachment-set"),Ipv4PeerAddress:i.data("ipv4-peer-address"),AdvertisdIpRoutingPreference:i.data("advertised-ip-routing-preference")})});var u=r(),f=u.map(n=>n.RoutingInstanceName);return{RoutingInstanceNames:f,VpnTenantIpNetworkOutRequests:t}}function u(){var t=n("#form");t.removeData("validator");t.removeData("unobtrusiveValidation");n.validator.unobtrusive.parse("#form")}n("#addRoutingInstance").on("click",function(){const i=n("#routing-instance-grid"),t=n("#RoutingInstance");if(t.val()!==""){const n=t.find(":selected").data("name"),r=i.find('td > input[type="text"]').filter(function(){return this.value===n}).length>0;if(r)Mind.Utilities.showDuplicateItemDialog("Duplicate Routing Instance","The routing instance already exists");else{let t=[];t.push({RoutingInstanceName:n});f(t).then(()=>{e(),o()})}}});n("#routing-instance-grid").on("click",".mind-grid-delete-row",function(){const t=n(this).data("row-id"),i=n("#routing-instance-grid-row_"+t);i.remove();f().then(()=>{RefreshBgpIpNetworkInboundPolicyGrid(),RefreshBgpIpNetworkOutboundPolicyGrid()})});n("#addInboundIpNetwork").on("click",function(){const i=n("#bgp-ip-network-inbound-policy-grid"),t=n("#InboundIpNetwork");if(t.val()!==""){const r=t.find(":selected").data("cidr-name"),u=i.find('td > input[type="text"]').filter(function(){return this.value===r}).length>0;if(u)Mind.Utilities.showDuplicateItemDialog("Duplicate IP Network","The IP network already exists");else{let t=[];t.push({TenantId:n("#TenantId").val(),TenantIpNetworkCidrName:r});e(t)}}});n("#addOutboundIpNetwork").on("click",function(){const i=n("#bgp-ip-network-outbound-policy-grid"),t=n("#OutboundIpNetwork");if(t.val()!==""){const r=t.find(":selected"),u=r.data("cidr-name"),f=r.data("tenant-name"),e=i.find('td > input[type="text"]').filter(function(){return this.value===u}).length>0;if(e)Mind.Utilities.showDuplicateItemDialog("Duplicate IP Network","The IP network already exists");else{let t=[];t.push({TenantId:n("#RemoteTenantId").val(),TenantName:f,TenantIpNetworkCidrName:u});o(t)}}});n("#bgp-ip-network-inbound-policy-grid").on("click",".mind-grid-delete-row",function(){const t=n(this).data("row-id"),i=n("#bgp-ip-network-inbound-policy-grid-row_"+t);i.remove();RefreshBgpIpNetworkInboundPolicyGrid()});n("#bgp-ip-network-outbound-policy-grid").on("click",".mind-grid-delete-row",function(){const t=n(this).data("row-id"),i=n("#bgp-ip-network-outbound-policy-grid-row_"+t);i.remove();RefreshBgpIpNetworkOutboundPolicyGrid()});n(".mind-grid").on("change",".mind-grid-checkbox",function(){this.value=this.checked});const t=n("#RemoteTenantId"),i=n("#OutboundIpNetwork");i[0].disabled=!0;t.on("change",()=>{t.val()===""?(i[0].selectedIndex=0,outboundIpNetwork[0].disabled=!0):Mind.Utilities.populateElement(i,"TenantIpNetworks",{tenantId:t.val()})})})(jQuery);